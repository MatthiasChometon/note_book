{"version":3,"sources":["../../src/controllers/markController.js"],"names":["Mark","mongoose","model","MarkSchema","User","UserSchema","addMark","req","res","params","userId","send","newMark","body","save","err","mark","json","deleteMark","markId","findByIdAndDelete","_id","updateMark","findByIdAndUpdate","new","getAllMarks","find","marks"],"mappings":";;;;;;;AAAA;;;;AAEA;;AACA;;;;AACA,MAAMA,OAAOC,mBAASC,KAAT,CAAe,MAAf,EAAuBC,qBAAvB,CAAb;AACA,MAAMC,OAAOH,mBAASC,KAAT,CAAe,MAAf,EAAuBG,qBAAvB,CAAb;;AAEA;AACA;;AAEO,MAAMC,4BAAU,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACvC,QAAI,CAACD,IAAIE,MAAJ,CAAWC,MAAhB,EAAwBF,IAAIG,IAAJ,CAAS,qBAAT;AACxB,QAAIC,UAAU,IAAIZ,IAAJ,CAASO,IAAIM,IAAb,CAAd;;AAEA,QAAIN,IAAIE,MAAJ,CAAWC,MAAf,EAAuBE,QAAQF,MAAR,GAAiBH,IAAIE,MAAJ,CAAWC,MAA5B;AACvBE,YAAQE,IAAR,CAAaF,OAAb,EAAsB,CAACG,GAAD,EAAMC,IAAN,KAAe;AACjC,YAAID,GAAJ,EAASP,IAAIS,IAAJ,CAASF,GAAT;AACTP,YAAIS,IAAJ,CAASD,IAAT;AACH,KAHD;AAIH,CATM;AAUA,MAAME,kCAAa,CAACX,GAAD,EAAMC,GAAN,KAAc;AACpC,QAAI,CAACD,IAAIE,MAAJ,CAAWU,MAAhB,EAAwBX,IAAIG,IAAJ,CAAS,gBAAT;AACxBX,SAAKoB,iBAAL,CAAuB,EAAEC,KAAKd,IAAIE,MAAJ,CAAWU,MAAlB,EAAvB,EAAoDJ,GAAD,IAAS;AACxD,YAAIA,GAAJ,EAASP,IAAIS,IAAJ,CAASF,GAAT;AACTP,YAAIS,IAAJ,CAAS,cAAT;AACH,KAHD;AAIH,CANM;;AAQA,MAAMK,kCAAa,CAACf,GAAD,EAAMC,GAAN,KAAc;AACpC,QAAI,CAACD,IAAIE,MAAJ,CAAWU,MAAhB,EAAwBX,IAAIG,IAAJ,CAAS,gBAAT;AACxBX,SAAKuB,iBAAL,CAAuB,EAAEF,KAAKd,IAAIE,MAAJ,CAAWU,MAAlB,EAAvB,EAAmDZ,IAAIM,IAAvD,EAA8D,EAACW,KAAK,IAAN,EAA9D,EAA2E,CAACT,GAAD,EAAMC,IAAN,KAAe;AACtF,YAAID,GAAJ,EAASP,IAAIS,IAAJ,CAASF,GAAT;AACTP,YAAIS,IAAJ,CAASD,IAAT;AACH,KAHD;AAIH,CANM;;AAQA,MAAMS,oCAAc,CAAClB,GAAD,EAAMC,GAAN,KAAc;AACrC,QAAI,CAACD,IAAIE,MAAJ,CAAWC,MAAhB,EAAwBF,IAAIG,IAAJ,CAAS,gBAAT;AACxBX,SAAK0B,IAAL,CAAU,EAAEhB,QAAQH,IAAIE,MAAJ,CAAWC,MAArB,EAAV,EAAyC,CAACK,GAAD,EAAMY,KAAN,KAAgB;AACrD,YAAIZ,GAAJ,EAASP,IAAIS,IAAJ,CAASF,GAAT;AACTP,YAAIS,IAAJ,CAASU,KAAT;AACH,KAHD;AAIH,CANM","file":"markController.js","sourcesContent":["import mongoose from 'mongoose';\r\n\r\nimport { MarkSchema } from '../models/markModel';\r\nimport { UserSchema } from '../models/userModel';\r\nconst Mark = mongoose.model('Mark', MarkSchema);\r\nconst User = mongoose.model('User', UserSchema);\r\n\r\n// import { ModelService } from '../services/modelService'\r\n// const userService = new ModelService(User)\r\n\r\nexport const addMark = async (req, res) => {\r\n    if (!req.params.userId) res.send('There is no user id')\r\n    let newMark = new Mark(req.body);\r\n\r\n    if (req.params.userId) newMark.userId = req.params.userId\r\n    newMark.save(newMark, (err, mark) => {\r\n        if (err) res.json(err)\r\n        res.json(mark)\r\n    })\r\n}\r\nexport const deleteMark = (req, res) => {\r\n    if (!req.params.markId) res.send(\"no id for mark\")\r\n    Mark.findByIdAndDelete({ _id: req.params.markId }, (err) => {\r\n        if (err) res.json(err)\r\n        res.json(\"mark deleted\")\r\n    });\r\n}\r\n\r\nexport const updateMark = (req, res) => {\r\n    if (!req.params.markId) res.send(\"no id for mark\")\r\n    Mark.findByIdAndUpdate({ _id: req.params.markId }, req.body,  {new: true}, (err, mark) => {\r\n        if (err) res.json(err)\r\n        res.json(mark)\r\n    })\r\n};\r\n\r\nexport const getAllMarks = (req, res) => {\r\n    if (!req.params.userId) res.send(\"no id for user\")\r\n    Mark.find({ userId: req.params.userId }, (err, marks) => {\r\n        if (err) res.json(err)\r\n        res.json(marks)\r\n    })\r\n};"]}