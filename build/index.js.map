{"version":3,"sources":["../src/index.js"],"names":["require","config","cors","helmet","app","use","origin","process","env","CORS_ORIGIN","express","json","limit","PORT","SERVER_PORT","mongoose","Promise","global","connect","DATABASE_URL","useNewUrlParser","markRoutes","userRoutes","authRoutes","static","corsOptions","optionsSuccessStatus","get","req","res","send","listen","console","log"],"mappings":";;AAEA;;;;AACA;;;;AAkBA;;;;AAGA;;;;AAGA;;;;;;AA3BAA,QAAQ,QAAR,EAAkBC,MAAlB;;AAIA,MAAMC,OAAOF,QAAQ,MAAR,CAAb;AACA,MAAMG,SAASH,QAAQ,QAAR,CAAf;;AAEA,MAAMI,MAAM,wBAAZ;AACAA,IAAIC,GAAJ,CAAQH,KAAK;AACTI,YAAQC,QAAQC,GAAR,CAAYC;AADX,CAAL,CAAR;AAGAL,IAAIC,GAAJ,CAAQF,QAAR;AACAC,IAAIC,GAAJ,CAAQK,kBAAQC,IAAR,CAAa,EAAEC,OAAO,MAAT,EAAb,CAAR;AACA,MAAMC,OAAON,QAAQC,GAAR,CAAYM,WAAzB;;AAEA;AACAC,mBAASC,OAAT,GAAmBC,OAAOD,OAA1B;AACAD,mBAASG,OAAT,CAAiBX,QAAQC,GAAR,CAAYW,YAA7B,EAA2C;AACvCC,qBAAiB;AADsB,CAA3C;;AAKAhB,IAAIC,GAAJ,CAAQ,GAAR,EAAagB,mBAAb;;AAGAjB,IAAIC,GAAJ,CAAQ,GAAR,EAAaiB,mBAAb;;AAGAlB,IAAIC,GAAJ,CAAQ,GAAR,EAAakB,oBAAb;;AAEAnB,IAAIC,GAAJ,CAAQK,kBAAQc,MAAR,CAAe,QAAf,CAAR;;AAEA,IAAIC,cAAc;AACdnB,YAAQC,QAAQC,GAAR,CAAYC,WADN;AAEdiB,0BAAsB;AAFR,CAAlB;;AAKAtB,IAAIuB,GAAJ,CAAQ,GAAR,EAAazB,KAAKuB,WAAL,CAAb,EAAgC,CAACG,GAAD,EAAMC,GAAN,KAC5BA,IAAIC,IAAJ,CAAU,oBAAmBjB,IAAK,EAAlC,CADJ;;AAIAT,IAAI2B,MAAJ,CAAWlB,IAAX,EAAiB,MACbmB,QAAQC,GAAR,CAAa,iCAAgCpB,IAAK,EAAlD,CADJ","file":"index.js","sourcesContent":["require('dotenv').config()\r\n\r\nimport express from 'express';\r\nimport mongoose from 'mongoose';\r\nconst cors = require(\"cors\");\r\nconst helmet = require(\"helmet\");\r\n\r\nconst app = express();\r\napp.use(cors({\r\n    origin: process.env.CORS_ORIGIN\r\n}));\r\napp.use(helmet());\r\napp.use(express.json({ limit: '50MB' }));\r\nconst PORT = process.env.SERVER_PORT;\r\n\r\n// connection mongoose\r\nmongoose.Promise = global.Promise;\r\nmongoose.connect(process.env.DATABASE_URL, {\r\n    useNewUrlParser: true\r\n});\r\n\r\nimport markRoutes from './routes/markRoute'\r\napp.use('/', markRoutes)\r\n\r\nimport userRoutes from './routes/userRoute'\r\napp.use('/', userRoutes)\r\n\r\nimport authRoutes from './routes/authRoutes'\r\napp.use('/', authRoutes)\r\n\r\napp.use(express.static('public'));\r\n\r\nvar corsOptions = {\r\n    origin: process.env.CORS_ORIGIN,\r\n    optionsSuccessStatus: 200\r\n}\r\n\r\napp.get('/', cors(corsOptions), (req, res) =>\r\n    res.send(`Serveur sur port ${PORT}`)\r\n);\r\n\r\napp.listen(PORT, () =>\r\n    console.log(`votre serveur est sur le port ${PORT}`)\r\n);\r\n\r\n"]}